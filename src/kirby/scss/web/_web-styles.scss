@import "./ionic";
@import "./web-variables"; 
@import './web-include-media';
@import "./../base/typography"; 
@import "./../themes/colors";

:root { 
    --kirby-font-family: "Roboto";
    font-family: var(--kirby-font-family);
    @each $color, $color-name in $kirby-colors {
        --kirby-#{$color}: #{$color-name};
    }
    
}

.kirby-modal {
    // Hardcoded magic numbers: 
    // https://github.com/kirbydesign/designsystem/issues/468
    $modal-max-width: 720px;
    $modal-max-height: 648px;

    --background: #{get-color('background-color')};
    --border-radius: #{$border-radius};
    --box-shadow: #{get-elevation(8)};
    --max-height: 100%;
    --height: auto;
    position: fixed;
    align-items: flex-end;

    .modal-wrapper {
        // remove top spacing introduced by ionic
        transform: translate3d(0,0,0);
        
        // handle scrollable content
        .kirby-modal-wrapper {
            max-height: $modal-max-height;
            .modal-content {
                overflow-y: auto;
            }
        }
    }

    @include media(">=medium") {
        --width: $modal-max-width;
    }

    @media screen and (min-height: $modal-max-height) {
        --height: $modal-max-height;
        align-items: center;
    }
}
  
.backdrop-no-scroll {
    overflow: hidden;
}
  
.kirby-action-sheet {
    --background: transparent;
    --width: 100%;
    --height: 100%;
    position: fixed;
  
    .modal-wrapper {
        pointer-events: none; //Fix clickable backdrop of modal
        display: flex;
        justify-content: center;
        align-items: flex-end;
    }  
}

.alert-wrapper {
    box-shadow: get-elevation(8) !important;
}

.kirby-alert-btn {
    cursor: pointer;
    --ion-color-primary: #{get-color('black')};

    &.cancel {
        --ion-color-primary: #{get-color('danger')};
    }
}

.kirby-toast {
    position: fixed;
    
    // Set default colors
    --background: #{get-color('success')};
    --color: #{get-color('success-contrast')};
    --button-color: #{get-color('success-contrast')};

    @each $color-name, $color-value in $main-colors {
        @if ($color-name == 'success' or $color-name == 'warning' or $color-name == 'danger') {
            &.#{$color-name} {
                --background: #{get-color($color-name)};
                --color: #{get-color($color-name+'-contrast')};
                --button-color: #{get-color($color-name+'-contrast')};
            }
        }
    }
}
